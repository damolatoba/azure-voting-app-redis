# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - master
  
pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push image to ACR
  jobs:
  - job: BuildAndPush
    displayName: Build and Push Image to Azure Container Registry
    steps:

    - task: DockerCompose@0
      displayName: Build services
      inputs:
        action: Build services
        azureSubscriptionEndpoint: sc-principal
        azureContainerRegistry: scacrforaks
        dockerComposeFile: docker-compose.yaml
        qualifyImageNames: true

    - task: PowerShell@2
      displayName: Docker Images
      inputs:
        targetType: 'inline'
        script: |
          docker images

    - task: Docker@2
      displayName: Push front-end service image
      inputs:
        containerRegistry: dockerConnection
        repository: azure-vote-front
        command: push
        tags: |
          0.1.1

    - task: Docker@2
      displayName: Push back-end service image
      inputs:
        containerRegistry: dockerConnection
        repository: azure-vote-back
        command: push
        tags: |
          0.1.1

    - task: PublishPipelineArtifact@1
      displayName: Publish Pipeline Artifact
      inputs:
        targetPath: '$(Pipeline.Workspace)'
        artifact: 'manifests'
        publishLocation: 'pipeline'


- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  jobs:
  - deployment: Deploy
    displayName: Deploy job
    # pool:
    #   vmImage: $(vmImageName)
    environment: 'dev.dev-environment'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              artifactName: 'manifests'
              downloadPath: '$(System.ArtifactsDirectory)/manifests'

          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: imgpsecret
              namespace: dev-environment
              dockerRegistryEndpoint: dockerConnection
              
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              namespace: dev-environment
              manifests: |
                $(System.ArtifactsDirectory)/manifests/s/azure-vote-all-in-one-redis.yaml
              imagePullSecrets: |
                imgpsecret
              containers: |
                scacrforaks.azurecr.io/azure-vote-front:0.1.2
                scacrforaks.azurecr.io/azure-vote-back:0.1.2